# -*- coding: mbcs -*-
# Do not delete the following import lines
from abaqus import *
from abaqusConstants import *
import __main__


from neolab import *
import os
import glob
import numpy as np



composite_MA = { 
                    'Name'                  : 'COMPOSITE-Macseal',
                    'Elastic'               : [LAMINA,[60543.0, 27080.0, 0.078, 2601.0, 1571.48, 1571.48]],
                    'Hashin.Initiation'     : [965.560, 345.96, 212.309, 133.590, 41.621, 38.819],
                    #'Hashin.Evolution'      : [ENERGY,[10.9, 0.95, 17.6, 11.55]],
                    'Hashin.Stabilization'  : [0.001, 0.001, 0.001, 0.001],
                    'Ply.Thickness' : 0.54 }

composite_TK = { 
            'Name'                  : 'COMPOSITE-Tecnofink',
            'Elastic'               : [LAMINA,[52.390E3, 5.259E3, 0.316, 2068.0, 1864.1, 1864.1]],
            'Hashin.Initiation'     : [598.407, 212.484, 18.609, 67.401, 42.816, 19.160],
            #'Hashin.Evolution'      : [ENERGY,[10.9, 0.95, 17.6, 11.55]],
            'Hashin.Stabilization'  : [0.001, 0.001, 0.001, 0.001],
            'Ply.Thickness' : 0.9 }

composite_IT = { 
            'Name'                  : 'COMPOSITE-HITA',
            'Elastic'               : [LAMINA,[24584.0, 16378.0, 0.322, 4686.0, 1124.8, 1124.8]],
            'Hashin.Initiation'     : [308.530, 174.450, 193.651, 133.748, 68.112, 76.777],
            #'Hashin.Evolution'      : [ENERGY,[10.9, 0.95, 17.6, 11.55]],
            'Hashin.Stabilization'  : [0.001, 0.001, 0.001, 0.001],
            'Ply.Thickness': 1.0 }



# Here declare the material used for repair if repaired models are being simulated
cfrp_mat = composite_MA


# doe for damage models with aL damage location
doe = [['M01-D15-aL12', 3200.00, 246.00, 12.3000, 15.00, 1600.00],
        # ['M01-D30-aL12', 3200.00, 246.00, 12.3000, 30.00, 1600.00],
        # ['M01-D45-aL12', 3200.00, 246.00, 12.3000, 45.00, 1600.00],
        # ['M01-D60-aL12', 3200.00, 246.00, 12.3000, 60.00, 1600.00],
        # ['M02-D15-aL12', 3473.00, 178.00, 9.8889, 15.00, 1736.50],
        # ['M02-D30-aL12', 3473.00, 178.00, 9.8889, 30.00, 1736.50],
        # ['M02-D45-aL12', 3473.00, 178.00, 9.8889, 45.00, 1736.50],
        # ['M02-D60-aL12', 3473.00, 178.00, 9.8889, 60.00, 1736.50],
        # ['M03-D15-aL12', 4397.00, 169.00, 4.8286, 15.00, 2198.50],
        # ['M03-D30-aL12', 4397.00, 169.00, 4.8286, 30.00, 2198.50],
        # ['M03-D45-aL12', 4397.00, 169.00, 4.8286, 45.00, 2198.50],
        # ['M03-D60-aL12', 4397.00, 169.00, 4.8286, 60.00, 2198.50],
        # ['M04-D15-aL12', 9788.00, 301.00, 14.3333, 15.00, 4894.00],
        # ['M04-D30-aL12', 9788.00, 301.00, 14.3333, 30.00, 4894.00],
        # ['M04-D45-aL12', 9788.00, 301.00, 14.3333, 45.00, 4894.00],
        # ['M04-D60-aL12', 9788.00, 301.00, 14.3333, 60.00, 4894.00],
        # ['M05-D15-aL12', 7414.00, 190.00, 6.5517, 15.00, 3707.00],
        # ['M05-D30-aL12', 7414.00, 190.00, 6.5517, 30.00, 3707.00],
        # ['M05-D45-aL12', 7414.00, 190.00, 6.5517, 45.00, 3707.00],
        # ['M05-D60-aL12', 7414.00, 190.00, 6.5517, 60.00, 3707.00],
        # ['M06-D15-aL12', 7057.00, 155.00, 4.4286, 15.00, 3528.50],
        # ['M06-D30-aL12', 7057.00, 155.00, 4.4286, 30.00, 3528.50],
        # ['M06-D45-aL12', 7057.00, 155.00, 4.4286, 45.00, 3528.50],
        # ['M06-D60-aL12', 7057.00, 155.00, 4.4286, 60.00, 3528.50],
        # ['M07-D15-aL12', 5827.00, 112.00, 4.4800, 15.00, 2913.50],
        # ['M07-D30-aL12', 5827.00, 112.00, 4.4800, 30.00, 2913.50],
        # ['M07-D45-aL12', 5827.00, 112.00, 4.4800, 45.00, 2913.50],
        # ['M07-D60-aL12', 5827.00, 112.00, 4.4800, 60.00, 2913.50],
        # ['M01-D15-aL13', 3200.00, 246.00, 12.3000, 15.00, 1066.67],
        # ['M01-D30-aL13', 3200.00, 246.00, 12.3000, 30.00, 1066.67],
        # ['M01-D45-aL13', 3200.00, 246.00, 12.3000, 45.00, 1066.67],
        # ['M01-D60-aL13', 3200.00, 246.00, 12.3000, 60.00, 1066.67],
        # ['M02-D15-aL13', 3473.00, 178.00, 9.8889, 15.00, 1157.67],
        # ['M02-D30-aL13', 3473.00, 178.00, 9.8889, 30.00, 1157.67],
        # ['M02-D45-aL13', 3473.00, 178.00, 9.8889, 45.00, 1157.67],
        # ['M02-D60-aL13', 3473.00, 178.00, 9.8889, 60.00, 1157.67],
        # ['M03-D15-aL13', 4397.00, 169.00, 4.8286, 15.00, 1465.67],
        # ['M03-D30-aL13', 4397.00, 169.00, 4.8286, 30.00, 1465.67],
        # ['M03-D45-aL13', 4397.00, 169.00, 4.8286, 45.00, 1465.67],
        # ['M03-D60-aL13', 4397.00, 169.00, 4.8286, 60.00, 1465.67],
        # ['M04-D15-aL13', 9788.00, 301.00, 14.3333, 15.00, 3262.67],
        # ['M04-D30-aL13', 9788.00, 301.00, 14.3333, 30.00, 3262.67],
        # ['M04-D45-aL13', 9788.00, 301.00, 14.3333, 45.00, 3262.67],
        # ['M04-D60-aL13', 9788.00, 301.00, 14.3333, 60.00, 3262.67],
        # ['M05-D15-aL13', 7414.00, 190.00, 6.5517, 15.00, 2471.33],
        # ['M05-D30-aL13', 7414.00, 190.00, 6.5517, 30.00, 2471.33],
        # ['M05-D45-aL13', 7414.00, 190.00, 6.5517, 45.00, 2471.33],
        # ['M05-D60-aL13', 7414.00, 190.00, 6.5517, 60.00, 2471.33],
        # ['M06-D15-aL13', 7057.00, 155.00, 4.4286, 15.00, 2352.33],
        # ['M06-D30-aL13', 7057.00, 155.00, 4.4286, 30.00, 2352.33],
        # ['M06-D45-aL13', 7057.00, 155.00, 4.4286, 45.00, 2352.33],
        # ['M06-D60-aL13', 7057.00, 155.00, 4.4286, 60.00, 2352.33],
        # ['M07-D15-aL13', 5827.00, 112.00, 4.4800, 15.00, 1942.33],
        # ['M07-D30-aL13', 5827.00, 112.00, 4.4800, 30.00, 1942.33],
        # ['M07-D45-aL13', 5827.00, 112.00, 4.4800, 45.00, 1942.33],
        # ['M07-D60-aL13', 5827.00, 112.00, 4.4800, 60.00, 1942.33],
        # ['M01-D15-aL16', 3200.00, 246.00, 12.3000, 15.00, 533.33],
        # ['M01-D30-aL16', 3200.00, 246.00, 12.3000, 30.00, 533.33],
        # ['M01-D45-aL16', 3200.00, 246.00, 12.3000, 45.00, 533.33],
        # ['M01-D60-aL16', 3200.00, 246.00, 12.3000, 60.00, 533.33],
        # ['M02-D15-aL16', 3473.00, 178.00, 9.8889, 15.00, 578.83],
        # ['M02-D30-aL16', 3473.00, 178.00, 9.8889, 30.00, 578.83],
        # ['M02-D45-aL16', 3473.00, 178.00, 9.8889, 45.00, 578.83],
        # ['M02-D60-aL16', 3473.00, 178.00, 9.8889, 60.00, 578.83],
        # ['M03-D15-aL16', 4397.00, 169.00, 4.8286, 15.00, 732.83],
        # ['M03-D30-aL16', 4397.00, 169.00, 4.8286, 30.00, 732.83],
        # ['M03-D45-aL16', 4397.00, 169.00, 4.8286, 45.00, 732.83],
        # ['M03-D60-aL16', 4397.00, 169.00, 4.8286, 60.00, 732.83],
        # ['M04-D15-aL16', 9788.00, 301.00, 14.3333, 15.00, 1631.33],
        # ['M04-D30-aL16', 9788.00, 301.00, 14.3333, 30.00, 1631.33],
        # ['M04-D45-aL16', 9788.00, 301.00, 14.3333, 45.00, 1631.33],
        # ['M04-D60-aL16', 9788.00, 301.00, 14.3333, 60.00, 1631.33],
        # ['M05-D15-aL16', 7414.00, 190.00, 6.5517, 15.00, 1235.67],
        # ['M05-D30-aL16', 7414.00, 190.00, 6.5517, 30.00, 1235.67],
        # ['M05-D45-aL16', 7414.00, 190.00, 6.5517, 45.00, 1235.67],
        # ['M05-D60-aL16', 7414.00, 190.00, 6.5517, 60.00, 1235.67],
        # ['M06-D15-aL16', 7057.00, 155.00, 4.4286, 15.00, 1176.17],
        # ['M06-D30-aL16', 7057.00, 155.00, 4.4286, 30.00, 1176.17],
        # ['M06-D45-aL16', 7057.00, 155.00, 4.4286, 45.00, 1176.17],
        # ['M06-D60-aL16', 7057.00, 155.00, 4.4286, 60.00, 1176.17],
        # ['M07-D15-aL16', 5827.00, 112.00, 4.4800, 15.00, 971.17],
        # ['M07-D30-aL16', 5827.00, 112.00, 4.4800, 30.00, 971.17],
        # ['M07-D45-aL16', 5827.00, 112.00, 4.4800, 45.00, 971.17],
        ['M07-D60-aL16', 5827.00, 112.00, 4.4800, 60.00, 971.17]]




for m in doe:
    # nameModel1, tubeLength1, tubeDiameterOut1, tubeThickness1, damageAngle1, damageLocation1, repairThickness1 = m[0], m[1], m[2], m[3], m[4], m[5], m[6]#  for repair with wi/aL
    nameModel1, tubeLength1, tubeDiameterOut1, tubeThickness1, damageAngle1, damageLocation1  = m[0], m[1], m[2], m[3], m[4], m[5] #  for damage wi/aL
    createTube(nameModel1, tubeLength1, tubeDiameterOut1, tubeThickness1,damageLocation1)
    setDamage(nameModel1, tubeLength1, tubeDiameterOut1, tubeThickness1, damageAngle1, damageLocation1)
    # setRepair(nameModel1, tubeLength1, tubeDiameterOut1, tubeThickness1, damageAngle1, repairThickness1, cfrp_mat, damageLocation1) # uncomment if repair
    simulation(nameModel1, 8) # Number of CPUs
    # correctRepairedModel(nameModel1) # uncomment if repair
    correctDamagedModel(nameModel1)


# ======================================================================================================================================================
# Rememeber that for optimization, the Leff was defined as the ceil integer of the estimated Leff parameter and the one near to 50 to 100 multiple
# ======================================================================================================================================================


writeBatchFile(20) # set rthe nCPUs
saveCAE("Damage-AxialLocationEffect-202506-V0") #set a name for the cae file




